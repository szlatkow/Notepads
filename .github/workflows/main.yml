name: Notepads CI/CD Pipeline

on: [push, pull_request, workflow_dispatch]

jobs:
  ci:
    runs-on: windows-latest
    outputs:
      new_version: ${{ steps.tag_generator.outputs.new_version }}    
    strategy:
      matrix:
        configuration: [Debug, Release]    
    env:
      Solution_Name: src\Notepads.sln
      Project_Path: src\Notepads\Notepads.csproj
    
    steps:

    - name: Set up JDK 11
      id: Setup_JDK
      uses: actions/setup-java@v1
      with:
        java-version: 1.11

    - name: Install .NET Core
      id: install_dotnet_dependencies
      uses: actions/setup-dotnet@v1

    - name: Setup MSBuild
      id: setup_msbuild
      uses: microsoft/setup-msbuild@v1

    - uses: actions/checkout@v2
      id: actions_checkout
      with:
        fetch-depth: 50

    - name: Create and publish release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NEW_TAG }}
        release_name: Release ${{ env.NEW_TAG }}
        body: "[CHANGE LOG](HISTORY.md)"
        
    - if: github.event_name != 'pull_request'
      name: Cache SonarCloud packages
      id: cache_sonar_packages
      uses: actions/cache@v2
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - if: github.event_name != 'pull_request'
      name: Cache SonarCloud scanner
      id: cache_sonar_scanner
      uses: actions/cache@v2
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner

    - if: github.event_name != 'pull_request' && steps.cache_sonar_scanner.outputs.cache-hit != 'true'
      name: Install SonarCloud scanner
      id: install_sonar_scanner
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

    - if: github.event_name != 'pull_request'
      name: Lowercase string generator
      id: lowercase_string_gen
      shell: powershell
      run: |
        $LOWERCASE_OWNER = "${{ github.repository_owner }}".ToLower()
        echo "::set-output name=owner_name::$LOWERCASE_OWNER"

    - if: github.event_name != 'pull_request'
      name: Initialize SonarCloud scanner
      id: init_sonar_scanner
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: .\.sonar\scanner\dotnet-sonarscanner begin /k:"${{ github.repository_owner }}_${{ github.event.repository.name }}" /o:"${{ steps.lowercase_string_gen.outputs.owner_name }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

    - name: Restore the application
      id: restore_application
      run: |
        msbuild $env:Solution_Name `
        /t:Restore `
        /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Build and generate bundles
      id: build_app
      run: |
        msbuild $env:Solution_Name `
        /p:Platform=$env:Platform `
        /p:Configuration=$env:Configuration `
        /p:UapAppxPackageBuildMode=$env:Uap_Appx_Package_Build_Mode `
        /p:AppxBundle=$env:Appx_Bundle `
        /p:AppxPackageSigningEnabled=$env:Appx_Package_Signing_Enabled `
        /p:AppxBundlePlatforms=$env:Appx_Bundle_Platforms `
        /p:AppxPackageDir=$env:Artifacts_Dir
      env:
        Platform: x64
        Configuration: ${{ matrix.configuration }}
        Uap_Appx_Package_Build_Mode: StoreUpload
        Appx_Bundle: Always
        Appx_Package_Signing_Enabled: false
        Appx_Bundle_Platforms: x86|x64
        Artifacts_Dir: ${{ github.workspace }}/Artifacts

    - if: github.event_name != 'pull_request'
      name: Send SonarCloud results
      id: send_sonar_results
      env:
        GITHUB_TOKEN: ${{ secrets.SONAR_GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

    - name: Upload build artifacts
      id: upload_artifacts
      uses: actions/upload-artifact@v1
      with:
        name: MSIX Package
        path: Artifacts/   
      
  cd:
    # "This job will execute when the workflow is triggered on a 'push event', the target branch is 'master' and the commit is intended to be a release."
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && needs.ci.outputs.new_version != ''
    needs: ci
    runs-on: windows-latest
    env:
      NEW_VERSION: ${{ needs.ci.outputs.new_version }}
      NEW_TAG: v${{ needs.ci.outputs.new_version }}
    steps:
      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v2   

      - name: Create and publish release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: Release ${{ env.NEW_TAG }}
          body: "[CHANGE LOG](HISTORY.md)"

      - name: Upload msixboundle as release asset
        id: upload_bogus_zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Artifacts/   
          asset_name: MSIX Package ${{ env.NEW_VERSION }}
          asset_content_type: application/zip


# Built with ‚ù§ by [Pipeline Foundation](https://pipeline.foundation)